using System.Collections;
using System.Collections.Generic;
using UnityEngine;

/*

### 180分間の詳細なタイムスケジュール

#### 学習の目的の明確化（1分）
- **目的**：セッションのゴールと学びたい内容を簡潔に説明。

#### 第1コマ
1. **講義（20分）**
   - **内容**：Unityの基本操作とスクリプティングの基礎。
   - **目的**：Unityのインターフェースと基本的なスクリプトの書き方を理解する。

2. **Unity上での個人操作（10分）**
   - **実践**：講義で学んだ内容を実際にUnityで試す。
   - **目的**：理論を実践に移し、実際にコードを書いてみる。

3. **講義内容を生徒同士で説明（10分）**
   - **活動**：ペアを組み、互いに教え合う形式で理解を深める。
   - **目的**：教えることで自身の理解を確かめ、コミュニケーションスキルを養う。

4. **視聴休憩（10分）**
   - **活動**：「桜井政博のゲームチャンネル」視聴、スタンド、ストレッチ、席移動。
   - **目的**：リラックスして次のセッションに備える。

5. **講義（20分）**
   - **内容**：変数とデータ型、簡単な計算方法。
   - **目的**：プログラムでデータをどのように扱うかを学ぶ。

6. **Unity上での個人操作（10分）**
   - **実践**：変数を使ったスクリプトを作成。

7. **講義内容を生徒同士で説明（10分）**
   - **活動**：学んだ計算方法を使って小さなプログラムを説明する。


 第2コマ
学習の目的の明確化（1分）
目的：第2コマのゴールと学習内容の概要を簡潔に説明し、学習意欲を高める。
講義（20分）
内容：配列とリストの使用方法、およびその利点と適用シナリオ。
目的：複数のデータを効率的に管理する方法を理解し、実際のゲーム開発におけるデータ管理の基礎を学ぶ。
Unity上での個人操作（10分）
実践：Unityで配列を使って簡単なインベントリーシステムを設計する。
目的：講義で学んだ理論を実際に適用し、プログラミングスキルを強化する。
講義内容を生徒同士で説明（10分）
活動：ペア活動を通じて、互いに作成したインベントリーシステムのコードを説明し合う。
目的：教え合うことで理解を深め、問題点や改善点を見つける機会を提供する。
「桜井政博のゲームチャンネル」視聴休憩（10分）
活動：動画視聴、リラックスタイム。
目的：短い休息を取りつつ、ゲーム開発に関連するインスピレーションを得る。
講義（20分）
内容：制御文の深堀り（ループと条件分岐の複合利用）。
目的：プログラムの流れを制御する高度な技術を学び、より複雑なロジックの構築方法を理解する。
Unity上での個人操作（10分）
実践：ループと条件分岐を組み合わせたゲームロジックを作成、例えば簡単なゲーム内クエストシステムの設計。
目的：実際にコードを書くことで、講義で学んだ内容を確実に理解し、実践的なスキルを身につける。
講義内容を生徒同士で説明（10分）
活動：作成したクエストシステムを相手に説明し、フィードバックを受け取る。
目的：相手に説明することで自身の理解を再確認し、コミュニケーション能力を養う。





第1コマと第2コマでの学習目的を明確化するための説明内容をそれぞれ作成しました。これらの説明は、生徒が授業の目標を理解し、期待される学びに集中できるように設計されています。

### 第1コマの学習の目的の明確化

**挨拶と導入：**
「みんな、こんにちは！今日はUnityでゲームを作る最初の一歩を踏み出します。ゲームを作るためには、たくさんのツールとコードが必要だけど、今日はその基本から始めてみましょう。」

**目的説明：**
「このコマでは、まずUnityというプログラムの使い方を少しずつ学びます。そして、プログラミング言語であるC#（シーシャープ）で簡単なスクリプトを作成する方法を見ていきます。スクリプトとは、私たちがゲームに命令を出すための言葉のようなものです。」

**期待される成果：**
「授業の終わりには、自分のゲームに簡単な命令を出すスクリプトを一つ作れるようになっているはずです。準備はいいですか？それでは、楽しい探検を始めましょう！」

### 第2コマの学習の目的の明確化

**挨拶と導入：**
「おかえりなさい、みんな！第1コマで基本を学んだので、今度はもう少し進んだことに挑戦してみましょう。」

**目的説明：**
「今コマでは、プログラミングでよく使う"配列"というツールと、プログラムの流れを自由にコントロールする"制御文"について学びます。配列は、たくさんのデータを整理して保管できる便利な箱のようなものです。制御文を使うと、ゲームで何が起こるかを正確に管理できるようになります。」

**期待される成果：**
「このコマの終わりには、データを効率的に管理し、ゲームの状況に応じて異なる反応をさせる方法を学ぶことができます。それでは、もっと深いプログラミングの世界へ一緒に進んでいきましょう！」

これらの簡潔な説明は、生徒が授業の目標に焦点を当て、モチベーションを保ちながら学習に取り組むのに役立ちます。それぞれのコマの初めにこれらの説明をすることで、生徒の期待を明確にし、学習への関心を高めることができます。


### 第1部: ゲームの設計を考えよう
- **学習の目的の明確化**: 「この部では、ゲーム開発の初期段階としてゲームの基本コンセプトやテーマ、プレイの流れをどう設計するかを学びます。ゲームの企画作成とゲームの部品について考え、その企画をどのように具体的なオブジェクトやスクリプトに落とし込むかを理解することが目標です。」

### 第2部: プロジェクトとシーンを作成しよう
- **学習の目的の明確化**: 「この部では、Unityを使用して新しいゲームプロジェクトを作成し、それをスマートフォン向けに最適化する方法を学びます。また、作成したシーンを保存し、後で再開できるようにする技術を習得します。」

### 第3部: オブジェクトの配置とスクリプトの基本
- **学習の目的の明確化**: 「この部では、Unityシーン内にオブジェクトを配置し、基本的なスクリプトを使用してゲームオブジェクトを動かす方法を学びます。特に、ルーレットのスクリプト作成と動作制御に焦点を当て、ゲームオブジェクトに命を吹き込む技術を掌握します。」

### 第4部: スマートフォンでの動作調整とビルド
- **学習の目的の明確化**: 「この部では、最終的なゲームをスマートフォンで操作可能にするための調整を行い、UnityでiPhoneおよびAndroid向けのビルドを作成する方法を学びます。ゲームが異なるプラットフォームでどのように機能するかを理解し、デバイス間での操作感の違いを体験します。」

これらの目的の明確化を通じて、生徒が各部の開始時に期待される学習成果を把握し、集中して取り組むことができるようになります。
 */

public class schedule1 : MonoBehaviour
{
    // Start is called before the first frame update
    void Start()
    {
        
    }

    // Update is called once per frame
    void Update()
    {
        
    }
}
