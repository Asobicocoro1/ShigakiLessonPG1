using System.Collections;
using System.Collections.Generic;
using UnityEngine;
/*
 ### 講義4: アニメーションの基本概念（6-6 アニメーションについて学ぼう）

#### 学習の目的の明確化 (1分)
**説明**: アニメーションを使ってキャラクターやオブジェクトに動きを与えます。基本的なAnimation Clipの作成と適用、アニメーション速度の調節を学びます。

#### 講義 (20分)
**内容**: アニメーションの基本概念（6-6 アニメーションについて学ぼう）

##### 6-6-1 Unityのアニメーション
- **説明**: Unityのアニメーションシステムは、オブジェクトのプロパティを時間経過に合わせて変化させることで、動きを作り出します。

##### 6-6-2 Mecanimとは
- **説明**: MecanimはUnityのアニメーションシステムで、視覚的なアニメーションコントローラーを使って複雑なアニメーションを簡単に管理できます。

##### 6-6-3 Animation Clipを作る
- **手順**:
  1. Projectウィンドウで「Animations」フォルダを作成します。
  2. Hierarchyウィンドウでアニメーションを適用するオブジェクト（例：プレイヤー）を選択します。
  3. ウィンドウ上部の「Window」→「Animation」→「Animation」を選択してAnimationウィンドウを開きます。
  4. 「Create」ボタンをクリックし、新しいAnimation Clipを作成します。名前を「PlayerWalk」にします。
  5. Animationウィンドウでアニメーションのフレームを設定します。例えば、キャラクターの歩行アニメーションを作成します。

##### 6-6-4 歩行アニメーションを作る
- **手順**:
  1. Animationウィンドウで、各フレームに対応するキャラクターのポーズを設定します。
  2. 必要なフレーム数を設定し、ループするアニメーションを作成します。

##### 6-6-5 アニメーションの速度を調節する
- **手順**:
  1. Animationウィンドウで「Samples」フィールドを調整し、アニメーションの速度を変更します。
  2. 実際に再生してみて、アニメーションの速度を確認し、適切な速度に調整します。

### Unity上で個人操作 (10分)
- **内容**: Animation Clipを作成し、歩行アニメーションを作成する
  - Animationウィンドウを使って、プレイヤーの歩行アニメーションを作成します。
  - 作成したAnimation Clipを適用し、アニメーションの速度を調整します。

### 生徒同士で説明 (10分)
- **内容**: 学んだことを互いに説明し合い、理解を深める
  - 各自がどのようにAnimation Clipを作成し、アニメーションを設定したかを説明し合います。
  - アニメーションの設定方法や速度の調整について意見を交換します。

これで、アニメーションの基本概念に関する講義は終了です。次の講義では、ステージの作成について学びます。
 */
public class Lecture6_4 : MonoBehaviour
{
    // Start is called before the first frame update
    void Start()
    {
        
    }

    // Update is called once per frame
    void Update()
    {
        
    }
}
