using System.Collections;
using System.Collections.Generic;
using UnityEngine;


/*

### Canvasのインスペクター

#### Canvasとは？
- **Canvas**（キャンバス）は、Unityで2DのUI（ユーザーインターフェース）を表示するための特別なオブジェクトです。ゲームの画面にボタンやテキスト、画像などを表示するために使います。

#### インスペクターでの設定
Canvasオブジェクトを選ぶと、インスペクターウィンドウにさまざまな設定項目が表示されます。それぞれの設定項目の意味を説明します。

1. **Canvasコンポーネント**
   - **Render Mode**（レンダーモード）
     - **Screen Space - Overlay**: Canvasが画面の上に表示されます。ゲームの画面サイズに合わせてUIが自動的に調整されます。
     - **Screen Space - Camera**: Canvasが特定のカメラに対して表示されます。カメラの視点に合わせてUIが表示されます。
     - **World Space**: Canvasが3D空間のオブジェクトとして表示されます。3Dモデルの一部としてUIを表示できます。

   - **Pixel Perfect**（ピクセルパーフェクト）
     - チェックを入れると、UIがピクセル単位で表示され、より鮮明になります。

   - **Render Camera**（レンダーカメラ）
     - Canvasを特定のカメラに表示する場合に使用します。カメラを指定すると、そのカメラの視点に合わせてCanvasが表示されます。

   - **Sorting Layer**（ソーティングレイヤー）
     - Canvasが他のオブジェクトと重なる順番を指定します。例えば、バックグラウンドよりも前に表示したい場合に使用します。

   - **Order in Layer**（オーダーインレイヤー）
     - 同じソーティングレイヤー内での表示順を決めます。数値が大きいほど前に表示されます。

2. **Canvas Scalerコンポーネント**
   - **UI Scale Mode**（UIスケールモード）
     - **Constant Pixel Size**: UIが常に同じピクセルサイズで表示されます。画面サイズが変わってもUIのサイズは変わりません。
     - **Scale With Screen Size**: 画面のサイズに応じてUIがスケール（拡大・縮小）されます。画面の解像度に応じて自動的に調整されます。
     - **Constant Physical Size**: UIが物理的なサイズ（インチやセンチメートル）で表示されます。デバイスの解像度に関係なく同じ物理サイズになります。

   - **Reference Resolution**（リファレンス解像度）
     - **Scale With Screen Size**を選んだ場合に使用します。基準となる画面の解像度を設定します。例えば、1920x1080の解像度を基準にする場合などです。

   - **Screen Match Mode**（スクリーンマッチモード）
     - **Match Width Or Height**: 画面の幅と高さのどちらに合わせてUIをスケールするかを設定します。スライダーを使って調整できます。

   - **Match**（マッチ）
     - **Width**（幅）と**Height**（高さ）のどちらに重きを置くかを決めます。スライダーを使って調整します。

3. **Graphic Raycasterコンポーネント**
   - **Ignore Reversed Graphics**（リバースドグラフィックスを無視）
     - チェックを入れると、Canvasの裏側にあるグラフィックスを無視します。通常、チェックを入れておきます。

   - **Blocking Objects**（ブロッキングオブジェクト）
     - UIがどのオブジェクトに対してブロックされるかを設定します。例えば、None（何もブロックしない）、TwoD（2Dオブジェクトをブロックする）、ThreeD（3Dオブジェクトをブロックする）などがあります。

#### まとめ
Canvasのインスペクターには、UIの表示方法やスケール方法、表示順序などを設定するための項目がたくさんあります。これらの設定を使うことで、ゲームのUIを自由にカスタマイズできます。

これでCanvasのインスペクターの詳細がわかりやすくなったかな？分からないところがあったら、気軽に質問してね！
 */
public class Lecture_Canvas : MonoBehaviour
{

}
