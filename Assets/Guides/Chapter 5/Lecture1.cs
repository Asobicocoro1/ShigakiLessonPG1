using System.Collections;
using System.Collections.Generic;
using UnityEngine;

/*
 

### 講義1: Prefabと当たり判定の基本

#### Prefabって何？
- **Prefab**（プレファブ）とは、ゲームの中で使うオブジェクトの「設計図」のことです。例えば、キャラクターや敵、アイテムなど、何度も使うものを一度作っておいて、その設計図を元に何度も使うことができるのがPrefabです。これを使うと、同じオブジェクトを簡単にたくさん配置できるんだよ。

#### 当たり判定って何？
- **当たり判定**（あたりはんてい）は、ゲームの中でオブジェクト同士がぶつかったかどうかを確認する仕組みのことです。例えば、プレイヤーキャラクターが敵にぶつかったときにダメージを受けたり、アイテムを取ったりするのは、当たり判定のおかげなんだ。

#### ゲームの企画を立てよう
1. **ステップ①: オブジェクトを書き出す**
   - ゲームに登場するキャラクター、敵、アイテムなどを紙に書き出してみよう。
   - どんな動きが必要かも考えよう。

2. **ステップ②: コントローラスクリプトを決める**
   - キャラクターや敵を動かすためのスクリプト（命令書）を考えよう。
   - 例えば、プレイヤーが矢を動かしたり、敵がプレイヤーに向かってきたりする動きのことだよ。

3. **ステップ③: オブジェクトを自動生成するジェネレータスクリプトを決める**
   - 敵やアイテムを自動で出現させるスクリプトを考えよう。
   - ゲームが始まると、次々と敵やアイテムが出てくるようにするんだ。

4. **ステップ④: UIを更新する監督スクリプトを用意する**
   - ゲームの画面に表示されるスコアやHP（体力）を更新するスクリプトを考えよう。
   - プレイヤーがダメージを受けたらHPを減らしたり、アイテムを取ったらスコアを増やしたりするんだ。

5. **ステップ⑤: スクリプトを作る流れを考える**
   - どの順番でスクリプトを作るかを考えて、計画を立てよう。
   - まずは簡単なものから始めて、少しずつ難しいものにチャレンジしていこう。

#### まとめ
Prefabと当たり判定を使うと、効率よくゲームを作ることができるよ。Prefabはオブジェクトの設計図で、当たり判定はぶつかったかどうかを確認する仕組み。これらを使って、ゲームの企画を立てていこう！


#### プロジェクトの作成
- **新しいプロジェクトを作成しよう**
  - Unityを開いたら、「新規プロジェクト」を選んで、新しいプロジェクトを作成します。
  - プロジェクトの名前をつけて、保存する場所を選びます。
  - 「作成」ボタンを押して、新しいプロジェクトをスタートしましょう。

#### スマートフォン用に設定する
- **ビルド設定**
  - 新しいプロジェクトができたら、次はゲームをスマートフォンで遊べるように設定します。
  - Unityのメニューから「File（ファイル）」→「Build Settings（ビルド設定）」を選びます。
  - 「Platform（プラットフォーム）」から「Android」か「iOS」を選んで、「Switch Platform（プラットフォームを切り替える）」を押します。

- **画面サイズの設定**
  - スマートフォンの画面に合うように、画面サイズを設定します。
  - Unityの「Game」ビューで、画面サイズをスマートフォンの解像度に設定します。
  - 例えば、「1920x1080」や「1080x1920」など、自分のスマートフォンに合わせたサイズにします。

#### シーンを保存する
- **現在のシーンの状態を保存しよう**
  - シーンとは、ゲームの1つの場面のことです。例えば、タイトル画面やゲームプレイ画面など、それぞれがシーンになります。
  - 作業を進めて、シーンの状態を保存しておくと、次回から続きから作業できます。
  - Unityのメニューから「File（ファイル）」→「Save Scene（シーンを保存）」を選んで、シーンの名前をつけて保存します。

#### プレイヤの配置
- **プレイヤオブジェクトをシーンに配置しよう**
  - シーンには、ゲームで操作するキャラクター（プレイヤ）を置く必要があります。
  - Unityの「ヒエラルキー」ウィンドウで、右クリックして「3Dオブジェクト」→「Cube」を選びます。
  - このCubeをプレイヤとして使います。名前を「Player」に変えましょう。
  - 「インスペクター」ウィンドウで、位置や大きさを調整して、シーンの好きな場所に配置します。

#### 背景画像の配置
- **シーンに背景画像を追加しよう**
  - ゲームの背景を設定すると、見た目が良くなります。
  - 「ヒエラルキー」ウィンドウで右クリックして、「UI」→「Image」を選びます。
  - このImageを背景として使います。名前を「Background」に変えましょう。
  - 「インスペクター」ウィンドウで、「Source Image」に背景画像を設定します。
  - 背景画像の位置やサイズを調整して、シーン全体をカバーするようにします。

- **レイヤの設定**
  - 背景画像が他のオブジェクトと重ならないように、レイヤを設定します。
  - 「インスペクター」ウィンドウで、「Layer」オプションを見つけ、「Add Layer」をクリックします。
  - 新しいレイヤを作成し、「Background」と名前を付けます。
  - 背景画像にこの新しいレイヤを割り当てます。


これで、講義1の内容がわかりやすくなったかな？分からないところがあったら、気軽に質問してね！ */
public class Lecture : MonoBehaviour
{
   
}
